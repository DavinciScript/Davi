import{_ as n,c as s,o as a,a as e}from"./app-CuSTjHNx.js";const p={},t=e(`<h1 id="tutorials" tabindex="-1"><a class="header-anchor" href="#tutorials"><span>Tutorials</span></a></h1><p>This section contains tutorials that demonstrate how to use the <code>davi</code> script to create websites and web applications.</p><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>DaVinci script is still in development, so some features may not work as expected.</p></div><h3 id="syntax" tabindex="-1"><a class="header-anchor" href="#syntax"><span>Syntax</span></a></h3><p>The DaVinci script is a PHP-like language, so it has a similar syntax to PHP. The DaVinci script uses the <code>&lt;?davi</code> tag to start the script and the <code>?&gt;</code> tag to end the script.</p><p>A DAVI script can be placed anywhere in the document. A DAVI script starts with <code>&lt;?davi</code> and ends with <code>?&gt;</code>:</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?</span>davi</span>
<span class="line"><span class="token comment">// Your code here</span></span>
<span class="line"><span class="token delimiter important">?&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hello-world" tabindex="-1"><a class="header-anchor" href="#hello-world"><span>Hello World</span></a></h3><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?</span>davi</span>
<span class="line"></span>
<span class="line"><span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;Hello World!&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token delimiter important">?&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="variables" tabindex="-1"><a class="header-anchor" href="#variables"><span>Variables</span></a></h3><p>Simple variables</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?</span>davi</span>
<span class="line"><span class="token comment">// Strings</span></span>
<span class="line"><span class="token variable">$name</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;John Doe&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;Hello, <span class="token interpolation"><span class="token variable">$name</span></span>!&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// String concatenation</span></span>
<span class="line"><span class="token variable">$age</span> <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;You are &quot;</span><span class="token punctuation">,</span><span class="token variable">$age</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot; years old&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// String concatenation</span></span>
<span class="line"><span class="token variable">$price</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;19.99&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;The price is&quot;</span><span class="token punctuation">,</span> <span class="token variable">$price</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token delimiter important">?&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Closure variable</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?</span>davi</span>
<span class="line"></span>
<span class="line"><span class="token comment">// Closure variable</span></span>
<span class="line"><span class="token variable">$timeHandler</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token variable">$time</span> <span class="token operator">=</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span><span class="token punctuation">(</span><span class="token variable">$time</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token variable">$timeHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token delimiter important">?&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="functions" tabindex="-1"><a class="header-anchor" href="#functions"><span>Functions</span></a></h3><h4 id="custom-function-declaration" tabindex="-1"><a class="header-anchor" href="#custom-function-declaration"><span>Custom Function declaration</span></a></h4><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?</span>davi</span>
<span class="line"></span>
<span class="line"><span class="token comment">// Function declaration</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function-definition function">sayHello</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Hello,&quot;</span><span class="token punctuation">,</span> <span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;John Doe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token delimiter important">?&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="built-in-functions" tabindex="-1"><a class="header-anchor" href="#built-in-functions"><span>Built-in Functions</span></a></h4><p>Times functions</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?</span>davi</span>
<span class="line"></span>
<span class="line"><span class="token comment">// Built-in functions</span></span>
<span class="line"><span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Current time: &quot;</span><span class="token punctuation">,</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token delimiter important">?&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Math calculations</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?</span>davi</span>
<span class="line"></span>
<span class="line"><span class="token comment">// In Echo with string </span></span>
<span class="line"><span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Test calculation: 1+2*3=&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Only math calculation</span></span>
<span class="line"><span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token delimiter important">?&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="if-statement" tabindex="-1"><a class="header-anchor" href="#if-statement"><span>If Statement</span></a></h3><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?</span><span class="token class-name type-declaration">davi</span></span>
<span class="line"><span class="token variable">$age</span> <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$age</span> <span class="token operator">&gt;</span> <span class="token number">18</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;You are an adult&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;You are a child&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token delimiter important">?&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="arrays" tabindex="-1"><a class="header-anchor" href="#arrays"><span>Arrays</span></a></h3><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?</span>davi</span>
<span class="line"></span>
<span class="line"><span class="token comment">// Array declaration</span></span>
<span class="line"><span class="token variable">$names</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;John&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;Doe&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;Jane&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;Doe&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token variable">$names</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token delimiter important">?&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sort-functions" tabindex="-1"><a class="header-anchor" href="#sort-functions"><span>Sort Functions</span></a></h3><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?</span><span class="token class-name type-declaration">davi</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;Bozhidar&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;Veselinov&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;Slaveykov&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;Asenov&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">sort</span><span class="token punctuation">(</span><span class="token variable">$list</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token variable">$list</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">sort</span><span class="token punctuation">(</span><span class="token variable">$list</span><span class="token punctuation">,</span> lower<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token variable">$list</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token delimiter important">?&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="for-loop" tabindex="-1"><a class="header-anchor" href="#for-loop"><span>For Loop</span></a></h3><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"></span>
<span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?</span><span class="token class-name type-declaration">davi</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;Bozhidar&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;Veselinov&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;Slaveykov&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;Asenov&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$x</span> <span class="token class-name type-declaration">in</span> <span class="token variable">$list</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token variable">$x</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token delimiter important">?&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,30),l=[t];function i(o,c){return a(),s("div",null,l)}const r=n(p,[["render",i],["__file","tutorials.html.vue"]]),d=JSON.parse('{"path":"/guide/tutorials.html","title":"Tutorials","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Syntax","slug":"syntax","link":"#syntax","children":[]},{"level":3,"title":"Hello World","slug":"hello-world","link":"#hello-world","children":[]},{"level":3,"title":"Variables","slug":"variables","link":"#variables","children":[]},{"level":3,"title":"Functions","slug":"functions","link":"#functions","children":[]},{"level":3,"title":"If Statement","slug":"if-statement","link":"#if-statement","children":[]},{"level":3,"title":"Arrays","slug":"arrays","link":"#arrays","children":[]},{"level":3,"title":"Sort Functions","slug":"sort-functions","link":"#sort-functions","children":[]},{"level":3,"title":"For Loop","slug":"for-loop","link":"#for-loop","children":[]}],"git":{"updatedTime":1724022249000,"contributors":[{"name":"Bozhidar","email":"bobi@microweber.com","commits":1}]},"filePathRelative":"guide/tutorials.md"}');export{r as comp,d as data};
