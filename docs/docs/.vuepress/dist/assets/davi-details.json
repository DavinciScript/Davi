{"Array":{"append":{"args":"list, value1, value2, ...","category":"Array","description":"Append values to a array.","example":"append([1, 2], 3, 4)","output":"[1, 2, 3, 4]","returnValue":"nil","title":"Append"},"range":{"args":"n","category":"Array","description":"Generate a list of integers from 0 to n-1.","example":"range(3)","output":"[0, 1, 2]","returnValue":"list","title":"Range"},"slice":{"args":"str or list, start, end","category":"Array","description":"Get a substring or sublist from a string or list.","example":"slice(\"hello\", 1, 3)","output":"\"el\"","returnValue":"str or list","title":"Slice"},"sort":{"args":"list, [key]","category":"Array","description":"Sort a list of values.","example":"sort([3, 1, 2])","output":"[1, 2, 3]","returnValue":"nil","title":"Sort"}},"Conversion":{"int":{"args":"value","category":"Conversion","description":"Convert a value to an integer.","example":"int(\"42\")","output":"42","returnValue":"int","title":"Int"},"str":{"args":"value","category":"Conversion","description":"Convert a value to a string.","example":"str([1, 2, 3])","output":"\"[1, 2, 3]\"","returnValue":"str","title":"Str"}},"File System":{"fileGetContents":{"args":"url","category":"File System","description":"Get the contents of a file or URL.","example":"fileGetContents(\"http","output":"\"...\"","returnValue":"str","title":"File Get Contents"}},"HTTP":{"httpListen":{"args":"portOrAddress","category":"HTTP","description":"Start the HTTP server.","example":"httpListen(\"","output":"Server is starting on http","returnValue":"nil","title":"HTTP Listen"},"httpRegister":{"args":"pattern, handler","category":"HTTP","description":"Register a handler function for a URL pattern.","example":"httpRegister(\"/\", func() { return \"Hello, World!\" })","output":"\"Hello, World!\"","returnValue":"nil","title":"HTTP Register"}},"String":{"camelCase":{"args":"string","category":"String","description":"Convert a string to camelCase.","example":"camelCase(\"Hello, World!\")","output":"\"helloWorld\"","returnValue":"str","title":"Camel Case"},"char":{"args":"string","category":"String","description":"Convert an ASCII code to a character.","example":"char(65)","output":"\"A\"","returnValue":"str","title":"Char"},"dotCase":{"args":"string","category":"String","description":"Convert a string to dot.case.","example":"dotCase(\"Hello, World!\")","output":"\"hello.world\"","returnValue":"str","title":"Dot Case"},"explode":{"args":"[separator], string","category":"String","description":"Explode a string into a list of substrings. It's the same as split() with the arguments reversed.","example":"explode(\", \", \"a, b, c\")","output":"[\"a\", \"b\", \"c\"]","returnValue":"list","title":"Explode"},"find":{"args":"haystack, needle","category":"String","description":"Find the first occurrence of a substring in a string or a value in a list.","example":"find(\"hello\", \"e\")","output":"1","returnValue":"int","title":"Find"},"join":{"args":"list, separator","category":"String","description":"Join a list of strings into a single string with a separator.","example":"join([\"a\", \"b\", \"c\"], \", \")","output":"\"a, b, c\"","returnValue":"str","title":"Join"},"kebabCase":{"args":"string","category":"String","description":"Convert a string to kebab-case.","example":"kebabCase(\"Hello, World!\")","output":"\"hello-world\"","returnValue":"str","title":"Kebab Case"},"len":{"args":"value","category":"String","description":"Get the length of a string, list, or map.","example":"len(\"hello\")","output":"5","returnValue":"int","title":"Length"},"lower":{"args":"string","category":"String","description":"Convert a string to lowercase.","example":"lower(\"HELLO\")","output":"\"hello\"","returnValue":"str","title":"Lower"},"lowerFirst":{"args":"string","category":"String","description":"Convert the first character of a string to lowercase.","example":"lowerFirst(\"Hello\")","output":"\"hello\"","returnValue":"str","title":"Lower First"},"lowerWords":{"args":"string","category":"String","description":"Convert all words in a string to lowercase.","example":"lowerWords(\"Hello, World!\")","output":"\"hello, world!\"","returnValue":"str","title":"Lower Words"},"pascalCase":{"args":"string","category":"String","description":"Convert a string to PascalCase.","example":"pascalCase(\"Hello, World!\")","output":"\"HelloWorld\"","returnValue":"str","title":"Pascal Case"},"rune":{"args":"str","category":"String","description":"Convert a 1-character string to an ASCII code.","example":"rune(\"A\")","output":"65","returnValue":"int","title":"Rune"},"snakeCase":{"args":"string","category":"String","description":"Convert a string to snake_case.","example":"snakeCase(\"Hello, World!\")","output":"\"hello_world\"","returnValue":"str","title":"Snake Case"},"split":{"args":"string, [separator]","category":"String","description":"Split a string into a list of substrings.","example":"split(\"a, b, c\", \", \")","output":"[\"a\", \"b\", \"c\"]","returnValue":"list","title":"Split"},"type":{"args":"value","category":"String","description":"Get the type of a value as a string.","example":"type(42)","output":"\"int\"","returnValue":"str","title":"Type"},"upFirst":{"args":"string","category":"String","description":"Convert the first character of a string to uppercase.","example":"upFirst(\"hello\")","output":"\"Hello\"","returnValue":"str","title":"Up First"},"upWords":{"args":"string","category":"String","description":"Convert all words in a string to uppercase.","example":"upWords(\"hello, world!\")","output":"\"Hello, World!\"","returnValue":"str","title":"Up Words"},"upper":{"args":"string","category":"String","description":"Convert a string to uppercase.","example":"upper(\"hello\")","output":"\"HELLO\"","returnValue":"str","title":"Upper"}},"System":{"args":{"args":"none","category":"System","description":"Get the command-line arguments passed to the script.","example":"args()","output":"[\"arg1\", \"arg2\"]","returnValue":"list","title":"Args"},"echo":{"args":"value1, value2, ...","category":"System","description":"Print values to the standard output.","example":"echo(\"hello\", 42)","output":"hello 42","returnValue":"nil","title":"Echo"},"exit":{"args":"[code]","category":"System","description":"Exit the script with an optional exit code.","example":"exit(1)","output":"exit status 1","returnValue":"nil","title":"Exit"},"read":{"args":"[filename]","category":"System","description":"Read the contents of a file or standard input.","example":"read(\"file.txt\")","output":"\"contents of file.txt\"","returnValue":"str","title":"Read"},"time":{"args":"none","category":"System","description":"Get the current date and time as a string.","example":"time()","output":"\"2018-01-01 12","returnValue":"str","title":"Time"}}}